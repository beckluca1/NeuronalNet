syntax = "proto3";

option csharp_namespace = "NeuronalNetServer.Proto";

package bitmap;

service Uploader {
  rpc SendBitmapData (stream BitmapData) returns (SuccessReply);

  rpc SendTrafficSign (TrafficSign) returns (SuccessReply);
  rpc SendMultipleTrafficSigns (stream TrafficSign) returns (SuccessReply);

  rpc SendTrafficImage (TrafficImage) returns (SuccessReply);

  rpc GetSignTypeData (Null) returns (NumberOfSigns);

  rpc GetNeuralNetData (Null) returns (NeuralNetData);
}

message BitmapData {
  int32 number = 1;
  bytes bitmap = 2;
}

message TrafficSign {
  SignType sign_type = 1;
  bytes red = 2;
  bytes green = 3;
  bytes blue = 4;
}

message TrafficImage {
  uint32 sign_count = 1;
  bytes red = 2;
  bytes green = 3;
  bytes blue = 4;
  bytes location = 5;
}

message NumberOfSigns {
  int32 stop = 1;
  int32 thirty_speed_limit = 2;
  int32 fifty_speed_limit = 3;
  int32 priority_road = 4;
  int32 give_way = 5;
  int32 unclassified = 6;
}

message NeuralNetData {
  bytes net_data = 1;
  int32 rating = 2;
}

message SuccessReply {
  bool success = 1;
}

message Null {}

enum SignType {
  Stop = 0;
  ThirtySpeedLimit = 1;
  FiftySpeedLimit = 2;
  PriorityRoad = 3;
  GiveWay = 4;
  Unclassified = 5;
}